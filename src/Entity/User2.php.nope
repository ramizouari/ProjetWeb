<?php

namespace App\Entity;

use App\Repository\UserRepository;
use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;
use Doctrine\ORM\Mapping as ORM;
use App\Entity\Book;
use Symfony\Component\Security\Core\User\UserInterface;

/**
 * @ORM\Entity(repositoryClass=UserRepository::class)
 */
class User implements UserInterface
{
    /**
     * @ORM\Id()
     * @ORM\GeneratedValue()
     * @ORM\Column(type="integer")
     */
    private $id;

    /**
     * @ORM\Column(type="string", length=32)
     */
    private $username;

    /**
     * @ORM\Column(type="string", length=64)
     */
    private $email;

    /**
     * @ORM\Column(type="string", length=32, nullable=true)
     */
    private $firstName;

    /**
     * @ORM\Column(type="string", length=32, nullable=true)
     */
    private $lastName;

    /**
     * @ORM\Column(type="string", length=64)
     */
    private $passwordHash;

    /**
     * @ORM\ManyToMany(targetEntity=Book::class, inversedBy="users")
     */
    private $booksCollection;
      /**
     * @ORM\ManyToMany(targetEntity=Book::class)
     */
    private $followedBooks;

    public function __construct()
    {
        $this->booksCollection = new ArrayCollection();
    }

    public function getId(): ?int
    {
        return $this->id;
    }

    public function getUsername(): ?string
    {
        return $this->username;
    }

    public function setUsername(string $username): self
    {
        $this->username = $username;

        return $this;
    }

    public function getEmail(): ?string
    {
        return $this->email;
    }

    public function setEmail(string $email): self
    {
        $this->email = $email;

        return $this;
    }

    public function getFirstName(): ?string
    {
        return $this->firstName;
    }

    public function setFirstName(?string $firstName): self
    {
        $this->firstName = $firstName;

        return $this;
    }

    public function getLastName(): ?string
    {
        return $this->lastName;
    }

    public function setLastName(?string $lastName): self
    {
        $this->lastName = $lastName;

        return $this;
    }

    public function getPasswordHash(): ?string
    {
        return $this->passwordHash;
    }

    public function setPasswordHash(string $passwordHash): self
    {
        $this->passwordHash = $passwordHash;

        return $this;
    }

    /**
     * @return Collection|Book[]
     */
    public function getBooksCollection(): Collection
    {
        return $this->booksCollection;
    }

    public function addBooksCollection(Book $booksCollection): self
    {
        if (!$this->booksCollection->contains($booksCollection)) {
            $this->booksCollection[] = $booksCollection;
        }

        return $this;
    }

    public function removeBooksCollection(Book $booksCollection): self
    {
        if ($this->booksCollection->contains($booksCollection)) {
            $this->booksCollection->removeElement($booksCollection);
        }

        return $this;
    }

    public function getFollowedBook(): Collection
    {
        return $this->followedBooks;
    }

    public function addFollowedBook(Book $followedBooks): self
    {
        if (!$this->followedBooks->contains($followedBooks)) {
            $this->followedBooks[] = $followedBooks;
        }

        return $this;
    }

    public function removeFollowedBook(Book $followedBooks): self
    {
        if ($this->followedBooks->contains($followedBooks)) {
            $this->followedBooks->removeElement($followedBooks);
        }

        return $this;
    }
}
