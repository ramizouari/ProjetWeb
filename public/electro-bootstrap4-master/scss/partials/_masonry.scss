$masonry_breakpoints-default: (
  xs: (
    columns: 1,
    gap: 0
  ),
  sm: (
    columns: 2,
    gap: 0
  ),
  md: (
    columns: 3,
    gap: 0
  ),
  lg: (
    columns: 4,
    gap: 0
  ),
) !default;


@mixin masonry($masonry_breakpoints: $masonry_breakpoints-default) {
	  
	  @each $breakpoint, $config in $masonry_breakpoints {
		$columns:   map-get($config, columns);
		$gap:   map-get($config, gap);
		
		@include media-breakpoint-up($breakpoint) {
			&
			{
				@include column-count($columns);
				@include column-gap($gap);
			}
		}
	}

	.item
	{
		max-height: 100%;

		/* Set our transitions up. */
		-webkit-transition: max-height 0.8s;
		-moz-transition: max-height 0.8s;
		transition: all 0.8s;
		
		position:relative;
	}

	.item .hover
	{
		opacity:0;
		transition: opacity 0.8s;
		position:absolute;
		bottom: 0px;
		width:100%;
		height:100%;
		z-index:2;
		background: rgba(0, 0, 0, 0.8) none repeat scroll 0 0;
	}

	.item .hover > div  {
		display:table;
		width:100%;
		height:100%
	 }
	 
	.item .hover > div > div {
		display:table-cell;
		width:100%;
		height:100%;
		vertical-align:middle;
	}

	.item:hover .hover
	{
		opacity:1;
	}

	& img.img
	{
		width:100%;
	}

	& .hidden
	{
		width: 0px;
		height: 0px;
		opacity:0;
		margin:0;
		padding:0;	
		@include animation-fill-mode(forward);
		@include animation(fadeInFromNone 0.5s ease-out);	
	}


	@include keyframes(fadeInFromNone) {
		0% {
			display: block;
			opacity: 1;
		}

		1% {
			display: block;
			opacity: .9;
			@include transform(scale(0.9));
		}

		99% {
			display: block;
			opacity: .1;
			@include transform(scale(0));
		}

		100% {
			@include transform(scale(0));
			opacity:0;
		}
	}
}


@mixin masonry-filters() {
	&
	{
		font-weight:600;

		a {
			margin-right:0.5rem;
		}
	}
}
